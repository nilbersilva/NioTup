<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="BaseButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background"
                Value="{DynamicResource Button.Brushes.Background}"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource Button.Brushes.Border}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{DynamicResource Button.Brushes.Foreground}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Padding"
                Value="16,3,16,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Chrome"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="true">
                        <Border.Effect>
                            <DropShadowEffect Color="{DynamicResource Button.Brushes.Background.Color}" RenderingBias="Performance" ShadowDepth="0"  />
                        </Border.Effect>
                        <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource Button.Brushes.Disabled}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{DynamicResource Button.Brushes.Background.MouseOver}" />
                            <!--<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}"/>-->
                            <Setter Property="Foreground" Value="{DynamicResource Button.Brushes.Foreground.MouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{DynamicResource Button.Brushes.Background.Pressed}" />
                            <!--<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}"/>-->
                            <Setter Property="Foreground" Value="{DynamicResource Button.Brushes.Foreground.Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{DynamicResource Application.Brushes.Accent}" />
                            <Setter TargetName="Chrome" Property="Background" Value="{DynamicResource Application.Brushes.AccentLight}" />
                            <Setter Property="Foreground" Value="{DynamicResource Application.Brushes.AccentLight.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Button}"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type Button}"/>

</ResourceDictionary>